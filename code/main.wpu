#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('main.py'): {339: (0,
        None,
        1,
        0),
                                      377: (0,
        None,
        1,
        0),
                                      594: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('main.py'): {}}
debug.show-args-dialog = {loc('main.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'FUG9HETtQ99nDcbNyQc7IRE5HP'\
        'W2zRze',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.3668831168831169,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'diversity',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 3778,
                       'folded-linenos': [],
                       'history': {u'file:c:/Users/Isaac/Desktop/github/ubiome/ubiome_longitudinal_analysis/code/main.py': ['p'\
        ' = np.sum((r/np.sum(r, axis=0)))\n',
        'p = (r/np.sum(r, axis=0))\n',
        'D = 1/np.sum(p**2, axis=0)  \n',
        '(1/44)\n',
        '44*((1/44)**2)\n',
        '(1/44)**2\n',
        '((1/44)**2)*44\n',
        '1/((1/44)**2)*44\n',
        'p.shape\n',
        'np.sum(pp, axis=0)\n',
        'np.sum(p, axis=0)\n',
        'np.sum(p**2, axis=0) \n',
        'np.sum(p**2, axis=0)\n',
        'D = 1/np.sum(p**2, axis=0)   \n',
        'p = (r/np.sum(r, axis=0))\nD = 1/np.sum(p**2, axis=0)\n\n',
        '(D/44)*100\n',
        '1/44\n',
        'D/44\n',
        'D*44\n',
        'p>0\n',
        'np.sum(p>0)\n',
        'np.sum(p>0, axis=0)\n',
        's = np.sum(p>0, axis=0)\n',
        's\n',
        'D/s\n',
        '3.7/34\n',
        '3.7/24\n',
        '3.7/3.7\n',
        '3.7/4\n',
        '(1/24)**2\n',
        '24*((1/24)**2)\n',
        'D(1/44)\n',
        'D*(1/44)\n',
        'D*(1/19)\n',
        'np.sum(p**2, axis=0)          \n',
        'np.sum(r)\n',
        'np.sum(r, axis=0)\n',
        'np.sum(r, axis=0)/100\n',
        '(np.sum(r, axis=0)/100)\n',
        'np.sum((r/100)**2,axis=0) # old way\n',
        'np.sum((r/100)**2,axis=0)\n',
        '1 - np.sum((r/100)**2,axis=0)\n',
        'rr\n',
        '1/(1 - np.sum((r/100)**2,axis=0))\n',
        'p*(p-1)\n',
        'p\n',
        'r\n',
        'r_int\n',
        'D = np.sum(r_int*(r_int-1), axis=0) /  (np.sum(r_int, axis=0)*(np.s'\
        'um(r_int, axis=0)-1))\n',
        'D = np.sum((r/100)**2,axis=0)\n',
        'plt.imshow(inputMat)\n',
        'aff_mat = np.zeros((numSubjects, numSubjects))\nfor k in range(numS'\
        'ubjects):\n    for kk in range(numSubjects):\n        aff_mat = 1/n'\
        'p.sqrt(np.sum((inputMat[k,:] - inputMat[kk,:])**2))\n\n',
        'inputMat.shahpe\n',
        'numSubjects\n',
        'numSubjects = inputMat.shape[1]\naff_mat = np.zeros((numSubjects, n'\
        'umSubjects))\nfor k in range(numSubjects):\n    for kk in range(num'\
        'Subjects):\n        aff_mat = 1/np.sqrt(np.sum((inputMat[k,:] - inp'\
        'utMat[kk,:])**2))\n\n',
        'numSubjects = inputMat.shape[1]\naff_mat = np.zeros((numSubjects, n'\
        'umSubjects))\nfor k in range(numSubjects):\n    for kk in range(num'\
        'Subjects):\n        aff_mat = 1/np.sqrt(np.sum((inputMat[:,k] - inp'\
        'utMat[:,kk])**2))\n\n',
        'aff_mat\n',
        'numSubjects = inputMat.shape[1]\naff_mat = np.zeros((numSubjects, n'\
        'umSubjects))\nfor k in range(numSubjects):\n    for kk in range(num'\
        'Subjects):\n        aff_mat[k,kk] = 1/np.sqrt(np.sum((inputMat[:,k]'\
        ' - inputMat[:,kk])**2))\n\n',
        'plt.imshow(aff_mat)\n',
        'from sklearn.lda import LDA\nclf = LDA()\nclf.fit(inputMat, outputV'\
        'ec)\n\n',
        'outputVec.shape\n',
        'from sklearn.lda import LDA\nclf = LDA()\nclf.fit(inputMat.T, outpu'\
        'tVec)\n\n',
        'clf.predict(inputMat.T)\n',
        'outputVec\n',
        'fit-outputVecf\n',
        'fit-outputVec\n',
        'err = np.sum(np.abs(fit - outputVec)>0)\n',
        'err\n',
        '6/40\n',
        'fit\n',
        'families\n',
        'scores = cross_validation.cross_val_score(clf, inputMat.T, outputVe'\
        'c, cv=5)    \n',
        ' scores = sklearn.cross_validation.cross_val_score(clf, inputMat, o'\
        'utputVec, cv=5)    \n',
        ' scores = sklearn.cross_validation.cross_val_score(clf, inputMat.T,'\
        ' outputVec, cv=5)    \n',
        ' scores = sklearn.cross_validation.cross_val_score(clf, inputMat.T,'\
        ' outputVec, cv=1)    \n',
        ' scores = sklearn.cross_validation.cross_val_score(clf, inputMat.T,'\
        ' outputVec, cv=2)    \n',
        'clf.score(inputMat.T, outputVec)\n',
        'sklearn.cross_validation.cross_val_score(clf, inputMat.T, outputVec'\
        ', cv=5)\n',
        'n_samples = inputMat.shape[1]\ncv = cross_validation.ShuffleSplit(n'\
        '_samples, n_iter=3, test_size=0.3, random_state=0)    \n\nscores = '\
        'sklearn.cross_validation.cross_val_score(clf, inputMat.T, outputVec'\
        ', cv=cv)\n\n',
        'n_samples = inputMat.shape[1]\ncv = sklearn.cross_validation.Shuffl'\
        'eSplit(n_samples, n_iter=3, test_size=0.3, random_state=0)    \n\n'\
        'scores = sklearn.cross_validation.cross_val_score(clf, inputMat.T, '\
        'outputVec, cv=cv)\n\n',
        'n_samples = inputMat.shape[1]\ncv = sklearn.cross_validation.Shuffl'\
        'eSplit(n_samples, n_iter=3, test_size=0.9, random_state=0)    \nsco'\
        'res = sklearn.cross_validation.cross_val_score(clf, inputMat.T, out'\
        'putVec, cv=cv)\n\n',
        'n_samples = inputMat.shape[1]\ncv = sklearn.cross_validation.Shuffl'\
        'eSplit(n_samples, n_iter=3, test_size=0.1, random_state=0)    \nsco'\
        'res = sklearn.cross_validation.cross_val_score(clf, inputMat.T, out'\
        'putVec, cv=cv)\n\n',
        'n_samples = inputMat.shape[1]\ncv = sklearn.cross_validation.Shuffl'\
        'eSplit(n_samples, n_iter=30, test_size=0.1, random_state=0)    \nsc'\
        'ores = sklearn.cross_validation.cross_val_score(clf, inputMat.T, ou'\
        'tputVec, cv=cv)\n\n',
        'n_samples\n',
        'cv = sklearn.cross_validation.ShuffleSplit(n_samples, n_iter=30, te'\
        'st_size=0.05, random_state=0)    \nscores = sklearn.cross_validatio'\
        'n.cross_val_score(clf, inputMat.T, outputVec, cv=cv)\n\n',
        "clf = svm.SVC(kernel='linear', C=1)\nn_samples = inputMat.shape[1]"\
        "\ncv = sklearn.cross_validation.ShuffleSplit(n_samples, n_iter=30, "\
        "test_size=0.05, random_state=0)    \nscores = sklearn.cross_validat"\
        "ion.cross_val_score(clf, inputMat.T, outputVec, cv=cv)\n\n",
        "# SVM\nclf = sklearn.svm.SVC(kernel='linear', C=1)\nn_samples = inp"\
        "utMat.shape[1]\ncv = sklearn.cross_validation.ShuffleSplit(n_sample"\
        "s, n_iter=30, test_size=0.05, random_state=0)    \nscores = sklearn"\
        ".cross_validation.cross_val_score(clf, inputMat.T, outputVec, cv=cv"\
        ")\n\n",
        "clf = sklearn.svm.SVC(kernel='linear', C=1)\nn_samples = inputMat.s"\
        "hape[1]\ncv = sklearn.cross_validation.ShuffleSplit(n_samples, n_it"\
        "er=30, test_size=0.5, random_state=0)    \nscores = sklearn.cross_v"\
        "alidation.cross_val_score(clf, inputMat.T, outputVec, cv=cv)\n\n",
        'inputMat\n',
        'inputMat.shape\n',
        'n_samples = inputMat.shape[1]\ncv = sklearn.cross_validation.Shuffl'\
        'eSplit(n_samples, n_iter=30, test_size=0.2, random_state=0)    \nsc'\
        'ores = sklearn.cross_validation.cross_val_score(clf, inputMat.T, ou'\
        'tputVec, cv=cv)\n\n',
        "clf = sklearn.svm.SVC(kernel='linear', C=10)\nn_samples = inputMat."\
        "shape[1]\ncv = sklearn.cross_validation.ShuffleSplit(n_samples, n_i"\
        "ter=30, test_size=0.2, random_state=0)    \nscores = sklearn.cross_"\
        "validation.cross_val_score(clf, inputMat.T, outputVec, cv=cv)\n\n",
        "clf = sklearn.svm.SVC(kernel='linear', C=1e-1)\nn_samples = inputMa"\
        "t.shape[1]\ncv = sklearn.cross_validation.ShuffleSplit(n_samples, n"\
        "_iter=30, test_size=0.2, random_state=0)    \nscores = sklearn.cros"\
        "s_validation.cross_val_score(clf, inputMat.T, outputVec, cv=cv)\n\n",
        'lf = LDA()\n',
        'clf = LDA()\n',
        'n_samples = inputMat.shape[1]\ncv = sklearn.cross_validation.KFold('\
        'n_samples,n_folds=8,shuffle=True)\nscores = sklearn.cross_validatio'\
        'n.cross_val_score(clf, inputMat.T, outputVec, cv=cv)\n\n',
        'scores\n',
        'scores.mean()\n',
        'D\n',
        '1-D\n']},
                       'launch-id': None,
                       'sel-line': 3792,
                       'sel-line-start': 226757,
                       'selection_end': 226757,
                       'selection_start': 226757}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('main.py'),
        {'attrib-starts': [('stackplotTest',
                            17)],
         'first-line': 127,
         'folded-linenos': [],
         'sel-line': 145,
         'sel-line-start': 4341,
         'selection_end': 4363,
         'selection_start': 4357},
        1470278117.312],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 156,
          'sel-line-start': 4765,
          'selection_end': 4795,
          'selection_start': 4789},
         1470278118.023],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 158,
          'sel-line-start': 4837,
          'selection_end': 4895,
          'selection_start': 4889},
         1470278118.382],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 161,
          'sel-line-start': 4980,
          'selection_end': 5010,
          'selection_start': 5004},
         1470278118.591],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 163,
          'sel-line-start': 5074,
          'selection_end': 5122,
          'selection_start': 5116},
         1470278118.775],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 325,
          'folded-linenos': [],
          'sel-line': 343,
          'sel-line-start': 12262,
          'selection_end': 12488,
          'selection_start': 12262},
         1470279641.367],
        [loc('../../../../../../../Python34/Lib/site-packages/matplotlib/image.py'),
         {'attrib-starts': [('_AxesImageBase',
                             62),
                            ('_AxesImageBase.set_data',
                             434)],
          'first-line': 423,
          'folded-linenos': [],
          'sel-line': 452,
          'sel-line-start': 15459,
          'selection_end': 15459,
          'selection_start': 15459},
         1470279653.039],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 325,
          'folded-linenos': [],
          'sel-line': 348,
          'sel-line-start': 12432,
          'selection_end': 12432,
          'selection_start': 12432},
         1470280130.398],
        [loc('../../../../../../../Python34/Lib/site-packages/matplotlib/mlab.py'),
         {'attrib-starts': [('PCA',
                             1627),
                            ('PCA.project',
                             1705)],
          'first-line': 1687,
          'folded-linenos': [],
          'sel-line': 1709,
          'sel-line-start': 52375,
          'selection_end': 52386,
          'selection_start': 52386},
         1470280236.205],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 325,
          'folded-linenos': [],
          'sel-line': 348,
          'sel-line-start': 12432,
          'selection_end': 12432,
          'selection_start': 12432},
         1470280897.429],
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/neighbors/base.py'),
         {'attrib-starts': [('KNeighborsMixin',
                             283),
                            ('KNeighborsMixin.kneighbors',
                             286)],
          'first-line': 311,
          'folded-linenos': [],
          'sel-line': 340,
          'sel-line-start': 12865,
          'selection_end': 12865,
          'selection_start': 12865},
         1470281036.871],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             20)],
          'first-line': 326,
          'folded-linenos': [],
          'sel-line': 331,
          'sel-line-start': 11711,
          'selection_end': 11744,
          'selection_start': 11735},
         1470696452.914],
        [loc('main.py'),
         {'attrib-starts': [('parseOtu',
                             489)],
          'first-line': 548,
          'folded-linenos': [],
          'sel-line': 574,
          'sel-line-start': 20056,
          'selection_end': 20141,
          'selection_start': 20056},
         1470794908.159],
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/utils/validation.py'),
         {'attrib-starts': [('check_consistent_length',
                             161)],
          'first-line': 147,
          'folded-linenos': [],
          'sel-line': 175,
          'sel-line-start': 5814,
          'selection_end': 5814,
          'selection_start': 5814},
         1470794912.453],
        [loc('main.py'),
         {'attrib-starts': [('parseOtu',
                             489)],
          'first-line': 558,
          'folded-linenos': [],
          'sel-line': 581,
          'sel-line-start': 20248,
          'selection_end': 20331,
          'selection_start': 20252},
         1470872467.375],
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/utils/validation.py'),
         {'attrib-starts': [('check_consistent_length',
                             161)],
          'first-line': 147,
          'folded-linenos': [],
          'sel-line': 175,
          'sel-line-start': 5814,
          'selection_end': 5814,
          'selection_start': 5814},
         1470872471.313],
        [loc('main.py'),
         {'attrib-starts': [('parseOtu',
                             489)],
          'first-line': 558,
          'folded-linenos': [],
          'sel-line': 581,
          'sel-line-start': 20248,
          'selection_end': 20331,
          'selection_start': 20252},
         1470872491.271],
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/cross_validation.py'),
         {'attrib-starts': [('_BaseKFold',
                             225),
                            ('_BaseKFold.__init__',
                             229)],
          'first-line': 212,
          'folded-linenos': [],
          'sel-line': 240,
          'sel-line-start': 7428,
          'selection_end': 7428,
          'selection_start': 7428},
         1470872524.319],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             20)],
          'first-line': 234,
          'folded-linenos': [],
          'sel-line': 239,
          'sel-line-start': 8364,
          'selection_end': 8402,
          'selection_start': 8396},
         1470879922.273],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             20)],
          'first-line': 306,
          'folded-linenos': [],
          'sel-line': 333,
          'sel-line-start': 11801,
          'selection_end': 11834,
          'selection_start': 11825},
         1470880011.206]],
        20),
        'current-loc': loc('main.py'),
        'editor-state-list': [(loc('../../../../../../../Python34/Lib/site-packages/sklearn/cross_validation.py'),
                               {'attrib-starts': [('_BaseKFold',
        225),
        ('_BaseKFold.__init__',
         229)],
                                'first-line': 212,
                                'folded-linenos': [],
                                'sel-line': 240,
                                'sel-line-start': 7428,
                                'selection_end': 7428,
                                'selection_start': 7428}),
                              (loc('../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx'),
                               {'displayed-index': 27,
                                'viewer-state': {'history': [-1,
        27],
        'history-pos': 1,
        'index': 27,
        'top': 0}}),
                              (loc('main.py'),
                               {'attrib-starts': [('stackplotTest',
        20)],
                                'first-line': 324,
                                'folded-linenos': [],
                                'sel-line': 335,
                                'sel-line-start': 11891,
                                'selection_end': 11909,
                                'selection_start': 11909})],
        'has-focus': False,
        'locked': False},
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/cross_validation.py'),
         loc('../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx'),
         loc('main.py')]),
                               'open_files': [u'../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx',
        u'main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.26955307262569833},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1900,
                         1008)}]}
guimgr.recent-documents = [loc('main.py'),
                           loc('../../../../../../../Python34/Lib/site-packages/sklearn/cross_validation.py')]
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
search.search-history = [u'diversity',
                         u'identi',
                         u'family',
                         u'identified',
                         u'genus heat',
                         u'genus',
                         u'show()',
                         u'class percent',
                         u'species heatmap']
testing.stored-results = (1,
                          [],
                          {})
