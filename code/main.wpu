#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('main.py'): {196: (0,
        None,
        1,
        0)}}
debug.show-args-dialog = {loc('main.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'FUG9HETtQ99nDcbNyQc7IRE5HP'\
        'W2zRze',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.1129207383279045,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u"    # Pull all class\n    cls = []\n    for f in fn:\n        r = open(f).read()\n        o = json.loads(r)\n        lst = o['ubiome_bacteriacounts']\n        for k in lst:\n            if k['tax_rank'] == 'class':\n                cls.append(k['tax_name'])\n\n    cls = sorted(list(set(cls)))    \n\n\n    # Get counts for each species from each dataset\n    N = len(fn)\n    p = {}\n    for k in cls:\n        p[k] = np.zeros(N)\n        c = 0\n        for f in fn:\n            r = open(f).read()\n            lst = json.loads(r)['ubiome_bacteriacounts'] \n            for kk in lst:\n                if kk['tax_rank'] == 'family' and kk['tax_name'] == k:\n                    p[kk['tax_name']][c] =  kk['count_norm']/10000\n            c += 1        \n    \n    r = []\n    for k in range(N):\n        for kk in cls:\n            r.append(p[kk][k])\n    r = np.reshape(r, (len(cls), N), order='F')    \n    \n    plt.clf()\n    plt.stackplot(rr, r)\n    plt.legend(cls)\n    plt.ylim([0,100])\n    plt.title('Family Percent of Sample, Stacked')\n    plt.ylabel('Percent of Sample')\n    plt.xlabel('Date')\n    plt.savefig(os.path.join(baseDir, 'family percent of sample - stacked.png'))    ",
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {u'file:d:/ASASIN/src/python/idgTools/csas.py': ['2'\
        '.4*0.015\n',
        'p\n',
        'numPingsImage\n',
        'plt.plot(fx(np.arange(0,numPings)))\n',
        'motionSolution\n',
        'motionSolution.shape\n',
        'plt.plot(motionSolution[0,:])\n',
        'plt.plot(motionSolution[1,:])\n',
        'plt.plot(motionSolution[2,:])\n',
        'offsets\n',
        'iter\n',
        "myAsasin = beamformer.beamformer('logger.txt', configFilename, 16, "\
        "2, 180e3, 62.5e3)   \nmyAsasin.beamform(data, roll, pitch, yaw, mot"\
        "ion_z, roll, roll, 0, motion_x,motion_y,motion_z, tme, speedOfSound"\
        ")        \ntime.sleep(1)    \nh = h5py.File(os.path.join(fn, 'SSAM "\
        "2 - {0} - HF - starboard - 0.slc'.format(trackName)))\nraster = h['"\
        "/singleLookComplex/data'][...]['real'] + 1j*h['/singleLookComplex/d"\
        "ata'][...]['imag']  \nraster = np.abs(raster)\n\n",
        'plt.imshow(raster)\n',
        'plt.imshow(raster**0.5)\n',
        'plt.imshow(sp.ndimage.zoom(referenceImage, 2))\n',
        'plt.imshow(sp.ndimage.zoom(referenceImage, 10))\n',
        'referenceImage = images[refIdx][center[0]-boxSize[0]/2:center[0]+bo'\
        'xSize[0]/2, center[1]-boxSize[1]/2:center[1]+boxSize[1]/2]\nreferen'\
        'ceImage = sp.ndimage.zoom(referenceImage, 10)\n\n',
        'tile = sp.ndimage.zoom(tile, 10)\n',
        "s = dsp.fftCorrelate2d(referenceImage**1, tile**1, mode = 'same')\n"\
        "offset = np.array(dsp.argmax2(s))\nmag.append(s[offset[0], offset[1"\
        "]])\n\n",
        'offset\n',
        'referenceImage = images[refIdx][center[0]-boxSize[0]/2:center[0]+bo'\
        'xSize[0]/2, center[1]-boxSize[1]/2:center[1]+boxSize[1]/2]\n',
        'tile = images[k][center[0]-boxSize[0]/2:center[0]+boxSize[0]/2, cen'\
        'ter[1]-boxSize[1]/2:center[1]+boxSize[1]/2]\n',
        "s = dsp.fftCorrelate2d(referenceImage**1, tile**1, mode = 'same')\n"\
        "offset = np.array(dsp.argmax2(s))\nmag.append(s[offset[0], offset[1"\
        "]])\n\npk = dsp.quadraticInterp(s[offset[0]-1,offset[1]], s[offset["\
        "0],offset[1]], s[offset[0]+1,offset[1]])\nif pk is None:\n    pk = "\
        "(0,0)\nx = offset[0] + pk[0]\npk = dsp.quadraticInterp(s[offset[0],"\
        "offset[1]-1], s[offset[0],offset[1]], s[offset[0],offset[1]+1])\nif"\
        " pk is None:\n    pk = (0,0)            \ny = offset[1] + pk[0]\nx "\
        "= x - boxSize[1]*10/2\ny = y - boxSize[0]*10/2\n\n",
        "s = dsp.fftCorrelate2d(referenceImage**1, tile**1, mode = 'same')\n"\
        "offset = np.array(dsp.argmax2(s))\nmag.append(s[offset[0], offset[1"\
        "]])\n\npk = dsp.quadraticInterp(s[offset[0]-1,offset[1]], s[offset["\
        "0],offset[1]], s[offset[0]+1,offset[1]])\nif pk is None:\n    pk = "\
        "(0,0)\nx = offset[0] + pk[0]\npk = dsp.quadraticInterp(s[offset[0],"\
        "offset[1]-1], s[offset[0],offset[1]], s[offset[0],offset[1]+1])\nif"\
        " pk is None:\n    pk = (0,0)            \ny = offset[1] + pk[0]\nx "\
        "= x - boxSize[1]/2\ny = y - boxSize[0]/2\n\n",
        'x\n',
        'y\n']},
                       'launch-id': None,
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('main.py'),
        {'attrib-starts': [('stackplotTest',
                            15)],
         'first-line': 429,
         'folded-linenos': [],
         'sel-line': 458,
         'sel-line-start': 15409,
         'selection_end': 15453,
         'selection_start': 15443},
        1470101612.419],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 135,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 3957,
          'selection_end': 4001,
          'selection_start': 3995},
         1470101640.795],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 135,
          'folded-linenos': [],
          'sel-line': 154,
          'sel-line-start': 4367,
          'selection_end': 4388,
          'selection_start': 4382},
         1470101641.473],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 135,
          'folded-linenos': [],
          'sel-line': 157,
          'sel-line-start': 4480,
          'selection_end': 4525,
          'selection_start': 4519},
         1470101641.921],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 147,
          'folded-linenos': [],
          'sel-line': 176,
          'sel-line-start': 5092,
          'selection_end': 5124,
          'selection_start': 5118},
         1470101643.44],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 161,
          'folded-linenos': [],
          'sel-line': 180,
          'sel-line-start': 5249,
          'selection_end': 5271,
          'selection_start': 5265},
         1470101644.184],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 172,
          'folded-linenos': [],
          'sel-line': 191,
          'sel-line-start': 5673,
          'selection_end': 5703,
          'selection_start': 5697},
         1470101644.352],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 172,
          'folded-linenos': [],
          'sel-line': 193,
          'sel-line-start': 5745,
          'selection_end': 5803,
          'selection_start': 5797},
         1470101644.697],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 172,
          'folded-linenos': [],
          'sel-line': 196,
          'sel-line-start': 5888,
          'selection_end': 5918,
          'selection_start': 5912},
         1470101644.873],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 172,
          'folded-linenos': [],
          'sel-line': 198,
          'sel-line-start': 5982,
          'selection_end': 6030,
          'selection_start': 6024},
         1470101645.529],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 83,
          'folded-linenos': [],
          'sel-line': 98,
          'sel-line-start': 2761,
          'selection_end': 2776,
          'selection_start': 2776},
         1470101695.009],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 46,
          'folded-linenos': [],
          'sel-line': 117,
          'sel-line-start': 3369,
          'selection_end': 3369,
          'selection_start': 3369},
         1470101721.535],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 108,
          'folded-linenos': [],
          'sel-line': 136,
          'sel-line-start': 3897,
          'selection_end': 3929,
          'selection_start': 3923},
         1470101723.653],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 122,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 4054,
          'selection_end': 4076,
          'selection_start': 4070},
         1470101724.369],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 151,
          'sel-line-start': 4478,
          'selection_end': 4508,
          'selection_start': 4502},
         1470101724.665],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 4550,
          'selection_end': 4608,
          'selection_start': 4602},
         1470101725.001],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 156,
          'sel-line-start': 4693,
          'selection_end': 4723,
          'selection_start': 4717},
         1470101725.201],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 158,
          'sel-line-start': 4787,
          'selection_end': 4835,
          'selection_start': 4829},
         1470101725.52],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             15)],
          'first-line': 309,
          'folded-linenos': [],
          'sel-line': 340,
          'sel-line-start': 11614,
          'selection_end': 11656,
          'selection_start': 11656},
         1470157595.678],
        [loc('../../../../../../../Python34/Lib/site-packages/matplotlib/stackplot.py'),
         {'attrib-starts': [('stackplot',
                             20)],
          'first-line': 80,
          'folded-linenos': [],
          'sel-line': 114,
          'sel-line-start': 3790,
          'selection_end': 3831,
          'selection_start': 3831},
         1470157608.759]],
        20),
        'current-loc': loc('main.py'),
        'editor-state-list': [(loc('../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx'),
                               {'displayed-index': 27,
                                'viewer-state': {'history': [-1,
        27],
        'history-pos': 1,
        'index': 27,
        'top': 0}}),
                              (loc('main.py'),
                               {'attrib-starts': [('stackplotTest',
        17)],
                                'first-line': 383,
                                'folded-linenos': [],
                                'sel-line': 426,
                                'sel-line-start': 14883,
                                'selection_end': 14959,
                                'selection_start': 14959}),
                              (loc('../../../../../../../Python34/Lib/site-packages/matplotlib/stackplot.py'),
                               {'attrib-starts': [('stackplot',
        20)],
                                'first-line': 80,
                                'folded-linenos': [],
                                'sel-line': 114,
                                'sel-line-start': 3790,
                                'selection_end': 3831,
                                'selection_start': 3831})],
        'has-focus': True,
        'locked': False},
        [loc('../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx'),
         loc('main.py'),
         loc('../../../../../../../Python34/Lib/site-packages/matplotlib/stackplot.py')]),
                               'open_files': [u'../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx',
        u'../../../../../../../Python34/Lib/site-packages/matplotlib/stackplot.py',
        u'main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.26955307262569833},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (655,
                         40,
                         944,
                         996)}]}
guimgr.recent-documents = [loc('main.py'),
                           loc('../../../../../../../Python34/Lib/site-packages/matplotlib/stackplot.py')]
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
search.search-history = [u'family',
                         u'identified',
                         u'show()',
                         u'class percent',
                         u'species heatmap']
testing.stored-results = (1,
                          [],
                          {})
