#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('main.py'): {339: (0,
        None,
        1,
        0),
                                      377: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('main.py'): {}}
debug.show-args-dialog = {loc('main.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'FUG9HETtQ99nDcbNyQc7IRE5HP'\
        'W2zRze',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.3668831168831169,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'diversity',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 3173,
                       'folded-linenos': [],
                       'history': {u'file:c:/Users/Isaac/Desktop/github/ubiome/ubiome_longitudinal_analysis/code/main.py': ['r'\
        'ef.shape\n',
        'np.corrcoef(ref, r[:,k])\n',
        'numSamples = len(rr)\nref = np.mean(r, axis=1)\nmat = np.zeros((num'\
        'Samples, numSamples))\nfor k in range(numSamples):\n    #mat[k,kk] '\
        '= np.mean((r[:,k] - r[:,kk])**2)\n    mat[k,kk] = np.corrcoef(ref, '\
        'r[:,k])[1,0]\n\n',
        'mat\n',
        'numSamples = len(rr)\nref = np.mean(r, axis=1)\nmat = np.zeros((num'\
        'Samples, ))\nfor k in range(numSamples):\n    #mat[k,kk] = np.mean('\
        '(r[:,k] - r[:,kk])**2)\n    mat[k] = np.corrcoef(ref, r[:,k])[1,0]'\
        '\n\n',
        'numSamples = len(rr)\nref = np.median(r, axis=1)\nmat = np.zeros((n'\
        'umSamples, ))\nfor k in range(numSamples):\n    #mat[k,kk] = np.mea'\
        'n((r[:,k] - r[:,kk])**2)\n    mat[k] = np.corrcoef(ref, r[:,k])[1,0'\
        ']\n\n',
        'plt.imshow(mat)\n',
        'plt.plot(mat)\n',
        "numSamples = len(rr)\nref = np.median(r, axis=1)\nmat = np.zeros((n"\
        "umSamples, ))\nfor k in range(numSamples):\n    mat[k] = np.corrcoe"\
        "f(ref, r[:,k])[1,0]\nplt.clf()\nplt.plot(mat)\n#plt.legend(family, "\
        "bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.ylim([0,1])"\
        "\nplt.title('Family Similarity Compared to Median')\nplt.ylabel('Si"\
        "milarity [0,1]')\nplt.xlabel('Date')\nplt.savefig(os.path.join(base"\
        "Dir, 'family similarity to median.png'))\n\n",
        "numSamples = len(rr)\nref = np.median(r, axis=1)\nmat = np.zeros((n"\
        "umSamples, ))\nfor k in range(numSamples):\n    mat[k] = np.corrcoe"\
        "f(ref, r[:,k])[1,0]\nplt.clf()\nplt.plot(rr. mat)\n#plt.legend(fami"\
        "ly, bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.ylim([0"\
        ",1])\nplt.title('Family Similarity Compared to Median')\nplt.ylabel"\
        "('Similarity [0,1]')\nplt.xlabel('Date')\nplt.savefig(os.path.join("\
        "baseDir, 'family similarity to median.png'))\n\n",
        "numSamples = len(rr)\nref = np.median(r, axis=1)\nmat = np.zeros((n"\
        "umSamples, ))\nfor k in range(numSamples):\n    mat[k] = np.corrcoe"\
        "f(ref, r[:,k])[1,0]\nplt.clf()\nplt.plot(rr, mat)\n#plt.legend(fami"\
        "ly, bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\nplt.ylim([0"\
        ",1])\nplt.title('Family Similarity Compared to Median')\nplt.ylabel"\
        "('Similarity [0,1]')\nplt.xlabel('Date')\nplt.savefig(os.path.join("\
        "baseDir, 'family similarity to median.png'))\n\n",
        'matplotlib.mlab.PCA(r)\n',
        'p.project(r[:,0])\n',
        'p  = matplotlib.mlab.PCA(r.T)\n',
        'p  = matplotlib.mlab.PCA(r)\n',
        'p.project(r[:,0].T)\n',
        'import sklearn\n',
        'sklearn.manifold()\n',
        'import sklearn.manifold\n',
        'sklearn.manifold.Isomap()\n',
        'f(r)\n',
        'f.fit(r)\n',
        'v = f.fit(r)\n',
        'v = f.transform(r)\n',
        'f = sklearn.manifold.Isomap()\n',
        'v = f.fit(r.T)\n',
        'v = f.transform(r.T)\n',
        'v\n',
        'v.shape\n',
        'plt.show()\n',
        'plt.clf()\n',
        'plt.plot(v[:,0], v[:,1])\n',
        "v = f.fit(r)    for label, x, y in zip(labels, v[:,0], v[:,1]):\n  "\
        "      plt.annotate(label, xy=(x,y), textcoords = 'offset points', h"\
        "a = 'right', va = 'bottom',\n        bbox = dict(boxstyle = 'round,"\
        "pad=0.5', fc = 'yellow', alpha = 0.5),\n        arrowprops = dict(a"\
        "rrowstyle = '->', connectionstyle = 'arc3,rad=0'))\n    plt.show()"\
        "\n\n",
        "for label, x, y in zip(labels, v[:,0], v[:,1]):\n    plt.annotate(l"\
        "abel, xy=(x,y), textcoords = 'offset points', ha = 'right', va = 'b"\
        "ottom',\n    bbox = dict(boxstyle = 'round,pad=0.5', fc = 'yellow',"\
        " alpha = 0.5),\n    arrowprops = dict(arrowstyle = '->', connection"\
        "style = 'arc3,rad=0'))\nplt.show()\n\n",
        'rr[0]\n',
        "plt.clf()\nf = sklearn.manifold.MDS()\nf.fit(r.T)\nv = f.transform("\
        "r.T)\nlabels = ['sample {0}'.format(rr[i]) for i in range(numSample"\
        "s)]\nplt.scatter(v[:,0], v[:,1])\nfor label, x, y in zip(labels, v["\
        ":,0], v[:,1]):\n    plt.annotate(label, xy=(x,y), textcoords = 'off"\
        "set points', ha = 'right', va = 'bottom',\n    bbox = dict(boxstyle"\
        " = 'round,pad=0.5', fc = 'yellow', alpha = 0.5),\n    arrowprops = "\
        "dict(arrowstyle = '->', connectionstyle = 'arc3,rad=0'))\nplt.show("\
        ")\n\n",
        "plt.clf()\nf = sklearn.manifold.MDS()\nf.fit(r.T)\nv = f.fit_transf"\
        "orm(r.T)\nlabels = ['sample {0}'.format(rr[i]) for i in range(numSa"\
        "mples)]\nplt.scatter(v[:,0], v[:,1])\nfor label, x, y in zip(labels"\
        ", v[:,0], v[:,1]):\n    plt.annotate(label, xy=(x,y), textcoords = "\
        "'offset points', ha = 'right', va = 'bottom',\n    bbox = dict(boxs"\
        "tyle = 'round,pad=0.5', fc = 'yellow', alpha = 0.5),\n    arrowprop"\
        "s = dict(arrowstyle = '->', connectionstyle = 'arc3,rad=0'))\nplt.s"\
        "how()\n\n",
        'f = sklearn.manifold.MDS()\nf.fit(r.T)\nv = f.fit_transform(r.T)\n'\
        '\n',
        "labels = ['sample {0}'.format(i) for i in range(numSamples)]\n",
        "plt.scatter(v[:,0], v[:,1])\nfor label, x, y in zip(labels, v[:,0],"\
        " v[:,1]):\n    plt.annotate(label, xy=(x,y), textcoords = 'offset p"\
        "oints', ha = 'right', va = 'bottom',\n    bbox = dict(boxstyle = 'r"\
        "ound,pad=0.5', fc = 'yellow', alpha = 0.5),\n    arrowprops = dict("\
        "arrowstyle = '->', connectionstyle = 'arc3,rad=0'))\nplt.show()\n\n",
        'r.shape\n',
        'r/np.sum(r, axis=1)\n',
        'r/np.sum(r, axis=0)\n',
        '(r/np.sum(r, axis=0))[0,:]\n',
        'np.sum((r/np.sum(r, axis=0))[0,:])\n',
        'np.sum((r/np.sum(r, axis=0))[1,:])\n',
        'np.sum((r/np.sum(r, axis=0))[:,0])\n',
        'p = np.sum((r/np.sum(r, axis=0))\n)\n',
        'p = np.sum((r/np.sum(r, axis=0)))\n',
        'p = (r/np.sum(r, axis=0))\n',
        'D = 1/np.sum(p**2, axis=0)  \n',
        '(1/44)\n',
        '44*((1/44)**2)\n',
        '(1/44)**2\n',
        '((1/44)**2)*44\n',
        '1/((1/44)**2)*44\n',
        'p.shape\n',
        'np.sum(pp, axis=0)\n',
        'np.sum(p, axis=0)\n',
        'np.sum(p**2, axis=0) \n',
        'np.sum(p**2, axis=0)\n',
        'D = 1/np.sum(p**2, axis=0)   \n',
        'p = (r/np.sum(r, axis=0))\nD = 1/np.sum(p**2, axis=0)\n\n',
        '(D/44)*100\n',
        '1/44\n',
        'D/44\n',
        'D*44\n',
        'p>0\n',
        'np.sum(p>0)\n',
        'np.sum(p>0, axis=0)\n',
        's = np.sum(p>0, axis=0)\n',
        's\n',
        'D/s\n',
        '3.7/34\n',
        '3.7/24\n',
        '3.7/3.7\n',
        '3.7/4\n',
        '(1/24)**2\n',
        '24*((1/24)**2)\n',
        'D(1/44)\n',
        'D*(1/44)\n',
        'D*(1/19)\n',
        'np.sum(p**2, axis=0)          \n',
        'np.sum(r)\n',
        'np.sum(r, axis=0)\n',
        'np.sum(r, axis=0)/100\n',
        '(np.sum(r, axis=0)/100)\n',
        'np.sum((r/100)**2,axis=0) # old way\n',
        'np.sum((r/100)**2,axis=0)\n',
        '1 - np.sum((r/100)**2,axis=0)\n',
        'rr\n',
        '1/(1 - np.sum((r/100)**2,axis=0))\n',
        'p*(p-1)\n',
        'p\n',
        'r\n',
        'r_int\n',
        'D = np.sum(r_int*(r_int-1), axis=0) /  (np.sum(r_int, axis=0)*(np.s'\
        'um(r_int, axis=0)-1))\n',
        'D = np.sum((r/100)**2,axis=0)\n',
        'D\n',
        '1-D\n']},
                       'launch-id': None,
                       'sel-line': 3187,
                       'sel-line-start': 189273,
                       'selection_end': 189273,
                       'selection_start': 189273}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('main.py'),
        {'attrib-starts': [('stackplotTest',
                            17)],
         'first-line': 198,
         'folded-linenos': [],
         'sel-line': 215,
         'sel-line-start': 7329,
         'selection_end': 7738,
         'selection_start': 7329},
        1470190239.803],
        [loc('../../../../../../../Python34/Lib/site-packages/matplotlib/colors.py'),
         {'attrib-starts': [('ColorConverter',
                             242),
                            ('ColorConverter.to_rgba',
                             333)],
          'first-line': 346,
          'folded-linenos': [],
          'sel-line': 375,
          'sel-line-start': 13600,
          'selection_end': 13600,
          'selection_start': 13600},
         1470190245.783],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 208,
          'folded-linenos': [],
          'sel-line': 236,
          'sel-line-start': 8324,
          'selection_end': 8366,
          'selection_start': 8356},
         1470191153.482],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 221,
          'folded-linenos': [],
          'sel-line': 238,
          'sel-line-start': 8411,
          'selection_end': 8431,
          'selection_start': 8431},
         1470191160.541],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 221,
          'folded-linenos': [],
          'sel-line': 239,
          'sel-line-start': 8435,
          'selection_end': 8501,
          'selection_start': 8491},
         1470191161.031],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 136,
          'folded-linenos': [],
          'sel-line': 141,
          'sel-line-start': 4184,
          'selection_end': 4216,
          'selection_start': 4210},
         1470278101.822],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 266,
          'selection_end': 308,
          'selection_start': 308},
         1470278114.504],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 113,
          'folded-linenos': [],
          'sel-line': 141,
          'sel-line-start': 4184,
          'selection_end': 4216,
          'selection_start': 4210},
         1470278115.547],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 127,
          'folded-linenos': [],
          'sel-line': 145,
          'sel-line-start': 4341,
          'selection_end': 4363,
          'selection_start': 4357},
         1470278117.312],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 156,
          'sel-line-start': 4765,
          'selection_end': 4795,
          'selection_start': 4789},
         1470278118.023],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 158,
          'sel-line-start': 4837,
          'selection_end': 4895,
          'selection_start': 4889},
         1470278118.382],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 161,
          'sel-line-start': 4980,
          'selection_end': 5010,
          'selection_start': 5004},
         1470278118.591],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 138,
          'folded-linenos': [],
          'sel-line': 163,
          'sel-line-start': 5074,
          'selection_end': 5122,
          'selection_start': 5116},
         1470278118.775],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 325,
          'folded-linenos': [],
          'sel-line': 343,
          'sel-line-start': 12262,
          'selection_end': 12488,
          'selection_start': 12262},
         1470279641.367],
        [loc('../../../../../../../Python34/Lib/site-packages/matplotlib/image.py'),
         {'attrib-starts': [('_AxesImageBase',
                             62),
                            ('_AxesImageBase.set_data',
                             434)],
          'first-line': 423,
          'folded-linenos': [],
          'sel-line': 452,
          'sel-line-start': 15459,
          'selection_end': 15459,
          'selection_start': 15459},
         1470279653.039],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 325,
          'folded-linenos': [],
          'sel-line': 348,
          'sel-line-start': 12432,
          'selection_end': 12432,
          'selection_start': 12432},
         1470280130.398],
        [loc('../../../../../../../Python34/Lib/site-packages/matplotlib/mlab.py'),
         {'attrib-starts': [('PCA',
                             1627),
                            ('PCA.project',
                             1705)],
          'first-line': 1687,
          'folded-linenos': [],
          'sel-line': 1709,
          'sel-line-start': 52375,
          'selection_end': 52386,
          'selection_start': 52386},
         1470280236.205],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             17)],
          'first-line': 325,
          'folded-linenos': [],
          'sel-line': 348,
          'sel-line-start': 12432,
          'selection_end': 12432,
          'selection_start': 12432},
         1470280897.429],
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/neighbors/base.py'),
         {'attrib-starts': [('KNeighborsMixin',
                             283),
                            ('KNeighborsMixin.kneighbors',
                             286)],
          'first-line': 311,
          'folded-linenos': [],
          'sel-line': 340,
          'sel-line-start': 12865,
          'selection_end': 12865,
          'selection_start': 12865},
         1470281036.871],
        [loc('main.py'),
         {'attrib-starts': [('stackplotTest',
                             20)],
          'first-line': 326,
          'folded-linenos': [],
          'sel-line': 331,
          'sel-line-start': 11711,
          'selection_end': 11744,
          'selection_start': 11735},
         1470696452.914]],
        20),
        'current-loc': loc('main.py'),
        'editor-state-list': [(loc('../../../../../../../Python34/Lib/site-packages/sklearn/neighbors/base.py'),
                               {'attrib-starts': [('KNeighborsMixin',
        283),
        ('KNeighborsMixin.kneighbors',
         286)],
                                'first-line': 311,
                                'folded-linenos': [],
                                'sel-line': 340,
                                'sel-line-start': 12865,
                                'selection_end': 12865,
                                'selection_start': 12865}),
                              (loc('../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx'),
                               {'displayed-index': 27,
                                'viewer-state': {'history': [-1,
        27],
        'history-pos': 1,
        'index': 27,
        'top': 0}}),
                              (loc('main.py'),
                               {'attrib-starts': [('stackplotTest',
        20)],
                                'first-line': 311,
                                'folded-linenos': [],
                                'sel-line': 332,
                                'sel-line-start': 11773,
                                'selection_end': 11799,
                                'selection_start': 11799})],
        'has-focus': True,
        'locked': False},
        [loc('../../../../../../../Python34/Lib/site-packages/sklearn/neighbors/base.py'),
         loc('../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx'),
         loc('main.py')]),
                               'open_files': [u'../../../../../../../Program Files (x86)/Wing IDE 5.1/resources/doc/en/TOC.idx',
        u'main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.26955307262569833},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1900,
                         1008)}]}
guimgr.recent-documents = [loc('main.py'),
                           loc('../../../../../../../Python34/Lib/site-packages/sklearn/neighbors/base.py')]
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
search.search-history = [u'diversity',
                         u'family',
                         u'identified',
                         u'genus heat',
                         u'genus',
                         u'show()',
                         u'class percent',
                         u'species heatmap']
testing.stored-results = (1,
                          [],
                          {})
